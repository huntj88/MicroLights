#include <Adafruit_I2CDevice.h>
#include <Adafruit_I2CRegister.h>
#include <Arduino.h>
#include <Wire.h>

/** Default I2C address. */
#define I2CADDR_DEFAULT 0x6A ///< I2C address
#define BQ25628_CHARGE_CURRENT_LIMIT 0x02
#define BQ25628_CHARGE_VOLTAGE_LIMIT 0x04
#define BQ25628_INPUT_CURRENT_LIMIT 0x06
#define BQ25628_INPUT_VOLTAGE_LIMIT 0x08
#define BQ25628_VOTG_REGULATION 0x0C
#define BQ25628_MIN_SYSTEM_VOLTAGE 0x0E
#define BQ25628_PRE_CHARGE_CONTROL 0x10
#define BQ25628_TERMINATION_CONTROL 0x12
#define BQ25628_CHARGE_CONTROL 0x14
#define BQ25628_CHARGE_TIMER_CONTROL 0x15
#define BQ25628_CHARGER_CONTROL_0 0x16
#define BQ25628_CHARGER_CONTROL_1 0x17
#define BQ25628_CHARGER_CONTROL_2 0x18
#define BQ25628_CHARGER_CONTROL_3 0x19
#define BQ25628_NTC_CONTROL_0 0x1A
#define BQ25628_NTC_CONTROL_1 0x1B
#define BQ25628_NTC_CONTROL_2 0x1C
#define BQ25628_CHARGER_STATUS_0 0x1D
#define BQ25628_CHARGER_STATUS_1 0x1E
#define BQ25628_FAULT_STATUS_0 0x1F
#define BQ25628_CHARGER_FLAG_0 0x20
#define BQ25628_CHARGER_FLAG_1 0x21
#define BQ25628_FAULT_FLAG_0 0x22
#define BQ25628_CHARGER_MASK_0 0x23
#define BQ25628_CHARGER_MASK_1 0x24
#define BQ25628_FAULT_MASK_0 0x25
#define BQ25628_ADC_CONTROL 0x26
#define BQ25628_ADC_FUNCTION_DISABLE_0 0x27
#define BQ25628_IBUS_ADC 0x28
#define BQ25628_IBAT_ADC 0x2A
#define BQ25628_VBUS_ADC 0x2C
#define BQ25628_VPMID_ADC 0x2E
#define BQ25628_VBAT_ADC 0x30
#define BQ25628_VSYS_ADC 0x32
#define BQ25628_TS_ADC 0x34
#define BQ25628_TDIE_ADC 0x36
#define BQ25628_PART_INFORMATION 0x38

class BQ25628 {
public:
    BQ25628();
    bool begin(TwoWire *theWire = &Wire);
    bool reset(void);
    bool enable(bool flag);

private:
    Adafruit_I2CDevice *i2c_dev = NULL;
};